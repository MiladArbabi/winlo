services:
  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
    env_file:
      - .env
    environment:
      PGHOST: postgres
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL","curl -f http://localhost:3000/health"]
      interval: 5s
      timeout: 3s
      retries: 5
    # for live development you can still mount src, config, scripts:
    volumes:
      - ./packages/api/src:/app/src
      - ./packages/api/config:/app/config
      - ./packages/api/scripts:/app/scripts

  postgres:
    image: postgres:14
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: winlo
    ports:
      - "5433:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5
