name: CI / CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read               # for checkout
  packages: write              # to push to GHCR
  id-token: write              # if you later need OIDC for cloud

env:
  # registry namespace
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/winlo-api

jobs:
  # 1) Lint & Test both API and Admin
  test:
    name: ðŸ§ª Lint & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pkg: [api, admin]
    defaults:
      run:
        working-directory: packages/${{ matrix.pkg }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  # 2) Build & Push API Docker image
  build-and-push-api:
    name: ðŸ“¦ Build & Push API image
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/api
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile       # adjust path if needed
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  # 3) Build Admin for static hosting (optional deploy step later)
  build-admin:
    name: ðŸš€ Build Admin
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/admin
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js admin
        run: npm run build

      # (optional) upload the out/ directory as an artifact
      # - name: Upload admin build artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: admin-build
      #     path: .next

  # 4) (Future) Deploy to staging via SSH + Docker Compose
  #deploy-staging:
  #  name: ðŸš¢ Deploy to Staging
  #  runs-on: ubuntu-latest
  #  needs: build-and-push-api
  #  steps:
  #    - uses: actions/checkout@v4
  #    - name: SSH & deploy
  #      uses: appleboy/ssh-action@v0.1.7
  #      with:
  #        host: ${{ secrets.STAGING_HOST }}
  #        username: ${{ secrets.STAGING_USER }}
  #        key: ${{ secrets.STAGING_SSH_KEY }}
  #        script: |
  #          cd /srv/winlo
  #          docker-compose pull api
  #          docker-compose up -d api